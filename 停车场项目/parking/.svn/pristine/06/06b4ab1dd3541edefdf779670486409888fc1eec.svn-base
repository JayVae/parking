<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hu.parking.dao.UsercouponMapper" >
  <resultMap id="BaseResultMap" type="com.hu.parking.entity.Usercoupon" >
    <id column="usercouponid" property="usercouponid" jdbcType="INTEGER" />
    <result column="couponid" property="couponid" jdbcType="INTEGER" />
    <result column="orduserid" property="orduserid" jdbcType="INTEGER" />
    <result column="havenum" property="havenum" jdbcType="INTEGER" />
    <result column="residuenum" property="residuenum" jdbcType="INTEGER" />
    <result column="isvalide" property="isvalide" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    usercouponid, couponid, orduserid, havenum, residuenum, isvalide
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from usercoupon
    where usercouponid = #{usercouponid,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from usercoupon
    where usercouponid = #{usercouponid,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.hu.parking.entity.Usercoupon" >
    insert into usercoupon (usercouponid, couponid, orduserid, 
      havenum, residuenum, isvalide
      )
    values (#{usercouponid,jdbcType=INTEGER}, #{couponid,jdbcType=INTEGER}, #{orduserid,jdbcType=INTEGER}, 
      #{havenum,jdbcType=INTEGER}, #{residuenum,jdbcType=INTEGER}, #{isvalide,jdbcType=VARCHAR}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.hu.parking.entity.Usercoupon" >
    insert into usercoupon
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="usercouponid != null" >
        usercouponid,
      </if>
      <if test="couponid != null" >
        couponid,
      </if>
      <if test="orduserid != null" >
        orduserid,
      </if>
      <if test="havenum != null" >
        havenum,
      </if>
      <if test="residuenum != null" >
        residuenum,
      </if>
      <if test="isvalide != null" >
        isvalide,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="usercouponid != null" >
        #{usercouponid,jdbcType=INTEGER},
      </if>
      <if test="couponid != null" >
        #{couponid,jdbcType=INTEGER},
      </if>
      <if test="orduserid != null" >
        #{orduserid,jdbcType=INTEGER},
      </if>
      <if test="havenum != null" >
        #{havenum,jdbcType=INTEGER},
      </if>
      <if test="residuenum != null" >
        #{residuenum,jdbcType=INTEGER},
      </if>
      <if test="isvalide != null" >
        #{isvalide,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.hu.parking.entity.Usercoupon" >
    update usercoupon
    <set >
      <if test="couponid != null" >
        couponid = #{couponid,jdbcType=INTEGER},
      </if>
      <if test="orduserid != null" >
        orduserid = #{orduserid,jdbcType=INTEGER},
      </if>
      <if test="havenum != null" >
        havenum = #{havenum,jdbcType=INTEGER},
      </if>
      <if test="residuenum != null" >
        residuenum = #{residuenum,jdbcType=INTEGER},
      </if>
      <if test="isvalide != null" >
        isvalide = #{isvalide,jdbcType=VARCHAR},
      </if>
    </set>
    where usercouponid = #{usercouponid,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.hu.parking.entity.Usercoupon" >
    update usercoupon
    set couponid = #{couponid,jdbcType=INTEGER},
      orduserid = #{orduserid,jdbcType=INTEGER},
      havenum = #{havenum,jdbcType=INTEGER},
      residuenum = #{residuenum,jdbcType=INTEGER},
      isvalide = #{isvalide,jdbcType=VARCHAR}
    where usercouponid = #{usercouponid,jdbcType=INTEGER}
  </update>
  <select id="selectAll" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from usercoupon
    <if test="sortName != null" >
      order by ${sortName}
      <if test="sortOrder != null" >
        ${sortOrder}
      </if>
    </if>
  </select>
  <select id="findByParams" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from usercoupon
    <if test="sortName != null" >
      order by ${sortName}
      <if test="sortOrder != null" >
        ${sortOrder}
      </if>
    </if>
    <if test="pageSize != null and startNum != null" >
      limit #{pageSize} offset #{startNum}
    </if>
  </select>
  <select id="findByParamsCount" resultType="int" parameterType="map" >
    select count(*) from usercoupon
  </select>
  <select id="findByKey" resultMap="BaseResultMap" parameterType="map" >
    select
    <include refid="Base_Column_List" />
    from usercoupon
    <where >
      <if test="ckey != null and cvalue != null" >
        and ${ckey} = #{cvalue}
      </if>
      <if test="pkey != null and pvalue != null" >
        and ${pkey} != #{pvalue}
      </if>
    </where>
  </select>
  <select id="findByKeyCount" resultType="int" parameterType="map" >
    select count(*) from usercoupon
    <where >
      <if test="ckey != null and cvalue != null" >
        and ${ckey} = #{cvalue}
      </if>
      <if test="pkey != null and pvalue != null" >
        and ${pkey} != #{pvalue}
      </if>
    </where>
  </select>
</mapper>